apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: train-mask-2d
  name: train-mask-2d
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: train-mask-2d
    spec:
      restartPolicy: "Never"
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: gpu-type
      #           operator: In
      #           values:
      #             - '2080Ti'
      #             - '1080Ti'
      containers:
      - name: train-mask-2d
        command: ["/bin/sh", "-c"]
        args: 
        - mkdir /data && cp -R /root/data/haosu /data/ && cd /data/haosu && 
          unzip -q training_data.zip && unzip -q testing_data_pose.zip && unzip -q models.zip && 
          cd /root/icp/ && python3 src/train_mask_2d.py --save_dir /root/data/haosu/ --epochs 500 --batch_size 2 --backward_freq 128
          # cd /root/icp/ && python3 src/frustrum_cacher.py --use_full && cp caches/frustrum_cache.hdf5 /root/data/haosu/ &&
        resources:
          limits:
            cpu: "8"
            memory: "12Gi"
            nvidia.com/gpu: 1
            ephemeral-storage: 100Gi
          requests:
            cpu: "8"
            memory: "8Gi"
            nvidia.com/gpu: 1
            ephemeral-storage: 100Gi
        image: gitlab-registry.nautilus.optiputer.net/vivecenter-berkeley-edu/icp:latest
        volumeMounts:
        - mountPath: /root/data
          name: fs-store
        - mountPath: /dev/shm
          name: dshm
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
      - name: fs-store
        flexVolume:
          driver: ceph.rook.io/rook
          fsType: ceph
          options:
            clusterNamespace: rook
            fsName: nautilusfs
            path: /half-potato
            mountUser: half-potato
            mountSecret: ceph-fs-secret
      imagePullSecrets:
      - name: regcredlp # this is the secret for you credentials to pull a private image





